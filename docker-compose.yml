services:
  # Backend Services
  backend-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fall-detection-backend-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    networks:
      - fall-detection-network
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    # ports:
    #   - "8000:8000"
    # command: php artisan serve --host=0.0.0.0 --port=8000
    depends_on:
      - redis

  backend-nginx:
    image: nginx:alpine
    container_name: fall-detection-backend-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www
      - ./backend/docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - fall-detection-network

  backend-db:
    image: postgres:15
    container_name: fall-detection-backend-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: fall_detection_backend
      POSTGRES_USER: fall_detection_backend_user
      POSTGRES_PASSWORD: fall_detection_backend_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fall-detection-network
  adminer:
    image: adminer
    container_name: fall-detection-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: backend-db
      ADMINER_DESIGN: nette
    depends_on:
      - backend-db
    networks:
      - fall-detection-network

  php-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - backend-app
      - redis
    networks:
      - fall-detection-network
    command: sh -c "php artisan queue:work & php artisan schedule:work"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - fall-detection-network

  # Mobile App Services
  # mobile-app:
  #   build:
  #     context: ./mobile-app
  #     dockerfile: Dockerfile
  #   container_name: fall-detection-mobile-app
  #   restart: unless-stopped
  #   working_dir: /app
  #   volumes:
  #     - ./mobile-app:/app
  #     - mobile-app-node-modules:/app/node_modules
  #     - mobile-app-expo:/app/.expo
  #   networks:
  #     - fall-detection-network
  #   environment:
  #     - NODE_ENV=production
  #     - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
  #     - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
  #     - EXPO_PACKAGER_PROXY_URL=http://0.0.0.0:19000
  #     - WDS_SOCKET_HOST=0.0.0.0
  #     - WDS_SOCKET_PORT=19002
  #   ports:
  #     - "19000:19000"  # Expo
  #     - "19001:19001"  # Expo DevTools
  #     - "19002:19002"  # Expo Web
  #   depends_on:
  #     - backend-app

  # Swarm Network Services
  node1:
    build: .
    environment:
      - NODE_ID=node1
      - PEERS=node2:5555,node3:5555
      - DATA_PATH=/app/data/MobiAct_combined.csv
    volumes:
      - ./data:/app/data:ro
    ports:
      - "5555:5555"
    networks:
      - swarm-network

  node2:
    build: .
    environment:
      - NODE_ID=node2
      - PEERS=node1:5555,node3:5555
      - DATA_PATH=/app/data/MobiAct_combined.csv
    volumes:
      - ./data:/app/data:ro
    ports:
      - "5556:5555"
    networks:
      - swarm-network

  node3:
    build: .
    environment:
      - NODE_ID=node3
      - PEERS=node1:5555,node2:5555
      - DATA_PATH=/app/data/MobiAct_combined.csv
    volumes:
      - ./data:/app/data:ro
    ports:
      - "5557:5555"
    networks:
      - swarm-network

networks:
  fall-detection-network:
    driver: bridge
  swarm-network:
    driver: bridge

volumes:
  postgres_data:
  mobile-app-node-modules:
  mobile-app-expo:
